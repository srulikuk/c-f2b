#!/bin/bash

# Thus script is to add iptables rules for logging closed port probes on a clearos system.
# This is called from /etc/clearos/firewall.d/90-attack-detector (end of file before "exit")

# Add iptables rule function
add_rules()
{
		# if only 1 port the rule uses different paramaters
		if [[ "$ports" == *","* ]] ; then
				port_param='-m multiport ! --dports'
  	else
  			port_param='! --dport'
  	fi

		iptables -A INPUT -i ppp+ -m state --state NEW -p $proto $port_param $ports -j \
LOG --log-prefix "Probe on closed port: " --log-level 4 -m comment --comment \
"RULE # $((rulenum++)) of $total_rules port probing LOG excluding -> $ports"
}

# Get the open ports from fw config
# TCP ports
mapfile -t tcp_list < <(grep "0x1" /etc/clearos/firewall.conf | grep '|6|' | awk -F"|" '{print $6}')

# UDP ports
mapfile -t udp_list < <(grep "0x1" /etc/clearos/firewall.conf | grep '|17|' | awk -F"|" '{print $6}')

# Set some vars for the iptables rule comments
rulenum=1 # Rule # for the iptables comment
tcp_rules=$(awk -v v1=${#tcp_list[@]} 'BEGIN {print int(0.99999 + v1/15)}')
udp_rules=$(awk -v v1=${#udp_list[@]} 'BEGIN {print int(0.99999 + v1/15)}')
total_rules=$((tcp_rules+udp_rules))

# TCP Rules
proto='tcp'
for (( x = 0; x < ${#tcp_list[@]}; x += 15 )); do
# iptables allows max 15 ports per tule so split it
		ports=$(echo ${tcp_list[*]:x:15} | tr ' ' ',' | sed 's/,$//')
		add_rules
done

# UDP Rules
proto='udp'
for (( x = 0; x < ${#udp_list[@]}; x += 15 )); do
		ports=$(echo ${udp_list[*]:x:15} | tr ' ' ',' | sed 's/,$//')
		add_rules
done
